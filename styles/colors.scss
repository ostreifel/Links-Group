@use "sass:map";

@function createColor($name, $defaultR, $defaultG, $defaultB, $defaultA: 1) {
    @return (
        variable: rgba(var($name, $defaultR, $defaultG, $defaultB), $defaultA),
        literal: rgba($defaultR, $defaultG, $defaultB, $defaultA),
    );
}
$colors: (
    /* Alias theme variables with defaults */
    palette-primary-shade-30: createColor(--palette-primary-shade-30, 0, 69, 120),  // rgb(0, 69, 120)
    palette-primary-shade-20: createColor(--palette-primary-shade-20, 0, 90, 158),  // rgb(0, 90, 158)
    palette-primary-shade-10: createColor(--palette-primary-shade-10, 16, 110, 190),// rgb(16, 110, 190)
    palette-primary: createColor(--palette-primary, 0, 120, 212),                   // rgb(0, 120, 212)
    palette-primary-tint-10: createColor(--palette-primary-tint-10, 43, 136, 216),  // rgb(43, 136, 216)
    palette-primary-tint-20: createColor(--palette-primary-tint-20, 199, 224, 244), // rgb(199, 224, 244)
    palette-primary-tint-30: createColor(--palette-primary-tint-30, 222, 236, 249), // rgb(222, 236, 249)
    palette-primary-tint-40: createColor(--palette-primary-tint-40, 239, 246, 252), // rgb(239, 246, 252)
    palette-neutral-100: createColor(--palette-neutral-100, 0, 0, 0),               // rgb(0, 0, 0)
    palette-neutral-80: createColor(--palette-neutral-80, 51, 51, 51),              // rgb(51, 51, 51)
    palette-neutral-70: createColor(--palette-neutral-70, 76, 76, 76),              // rgb(76, 76, 76)
    palette-neutral-60: createColor(--palette-neutral-60, 102, 102, 102),           // rgb(102, 102, 102)
    palette-neutral-30: createColor(--palette-neutral-30, 166, 166, 166),           // rgb(166, 166, 166)
    palette-neutral-20: createColor(--palette-neutral-20, 200, 200, 200),           // rgb(200, 200, 200)
    palette-neutral-10: createColor(--palette-neutral-10, 218, 218, 218),           // rgb(218, 218, 218)
    palette-neutral-8: createColor(--palette-neutral-8, 234, 234, 234),             // rgb(234, 234, 234)
    palette-neutral-6: createColor(--palette-neutral-6, 239, 239, 239),             // rgb(239, 239, 239)
    palette-neutral-4: createColor(--palette-neutral-4, 244, 244, 244),             // rgb(244, 244, 244)
    palette-neutral-2: createColor(--palette-neutral-2, 248, 248, 248),             // rgb(248, 248, 248)
    palette-neutral-0: createColor(--palette-neutral-0, 255, 255, 255),             // rgb(255, 255, 255)
    palette-accent1-light: createColor(--palette-accent1-light, 249, 235, 235),     // rgb(249, 235, 235)
    palette-accent1: createColor(--palette-accent1, 218, 10, 0),                    // rgb(218, 10, 0)
    palette-accent1-dark: createColor(--palette-accent1-dark, 168, 0, 0),           // rgb(168, 0, 0)
    palette-accent2-light: createColor(--palette-accent2-light, 223, 246, 221),     // rgb(223, 246, 221)
    palette-accent2: createColor(--palette-accent2, 186, 216, 10),                  // rgb(186, 216, 10)
    palette-accent2-dark: createColor(--palette-accent2-dark, 16, 124, 16),         // rgb(16, 124, 16)
    palette-accent3-light: createColor(--palette-accent3-light, 255, 244, 206),     // rgb(255, 244, 206)
    palette-accent3: createColor(--palette-accent3, 248, 168, 0),                   // rgb(248, 168, 0)
    palette-accent3-dark: createColor(--palette-accent3-dark, 220, 182, 122),       // rgb(220, 182, 122)
);
@function getColorLiteral($name) {
    @return map.get(map.get($colors, $name), literal);
}
@function getColorVariable($name) {
    @return map.get(map.get($colors, $name), variable);
}

@mixin color($colorName) {
    color: getColorLiteral($colorName);
    color: getColorVariable($colorName);
}
@mixin border($style, $width, $colorName) {
    border: $style $width getColorLiteral($colorName);
    border: $style $width getColorVariable($colorName);
}
@mixin outline($style, $width, $colorName) {
    outline: $style $width getColorLiteral($colorName);
    outline: $style $width getColorVariable($colorName);
}
@mixin border-bottom-color($colorName) {
    border-bottom-color: getColorLiteral($colorName);
    border-bottom-color: getColorVariable($colorName);
}
@mixin background-color($colorName) {
    background-color: getColorLiteral($colorName);
    background-color: getColorVariable($colorName);
}
@mixin border-color($colorName) {
    border-color: getColorLiteral($colorName);
    border-color: getColorVariable($colorName);
}
